<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mappers.InitialDao">
  <resultMap id="BaseResultMap" type="com.example.domain.Initial">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId"/>
    <result column="provider_code" jdbcType="VARCHAR" property="providerCode" />
    <result column="provider_name" jdbcType="VARCHAR" property="providerName" />
    <result column="batch_code" jdbcType="VARCHAR" property="batchCode" />
    <result column="material_code" jdbcType="VARCHAR" property="materialCode" />
    <result column="material_name" jdbcType="VARCHAR" property="materialName" />
    <result column="material_grade" jdbcType="VARCHAR" property="materialGrade" />
    <result column="material_type" jdbcType="VARCHAR" property="materialType" />
    <result column="account" jdbcType="INTEGER" property="account" />
    <result column="return_account" jdbcType="INTEGER" property="returnAccount" />
    <result column="issue_date" jdbcType="TIMESTAMP" property="issueDate" />
    <result column="arrival_date" jdbcType="TIMESTAMP" property="arrivalDate" />
    <result column="manufacture_date" jdbcType="TIMESTAMP" property="manufactureDate" />
    <result column="recorded_date" jdbcType="TIMESTAMP" property="recordedDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="owner_factory" jdbcType="VARCHAR" property="ownerFactory" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="charger" jdbcType="VARCHAR" property="charger" />
    <result column="is_return" jdbcType="TINYINT" property="isReturn" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="operation_history" jdbcType="VARCHAR" property="operationHistory" />
  </resultMap>
  <sql id="Base_Column_List">
    id, provider_code, provider_name, batch_code, material_code, material_name, material_grade, 
    material_type, account, return_account, issue_date, arrival_date, manufacture_date, 
    recorded_date, `status`, warehouse_name, `location`, owner_factory, `operator`, charger, 
    is_return, remark, operation_history
  </sql>

  <insert id="record" keyColumn="id" keyProperty="id" parameterType="com.example.domain.Initial" useGeneratedKeys="true">
    insert into t_initial (order_id,provider_code, provider_name, batch_code,
      material_code, material_name, material_grade, material_type,
      account, issue_date, arrival_date,
      manufacture_date, recorded_date, is_return,
      `status`, warehouse_name, `location`,
      owner_factory, `operator`, charger,
      remark)
    values (#{orderId,jdbcType=VARCHAR},#{providerCode,jdbcType=VARCHAR}, #{providerName,jdbcType=VARCHAR}, #{batchCode,jdbcType=VARCHAR},
      #{materialCode,jdbcType=VARCHAR}, #{materialName,jdbcType=VARCHAR}, #{materialGrade,jdbcType=VARCHAR}, #{materialType,jdbcType=VARCHAR},
      #{account,jdbcType=VARCHAR}, #{issueDate,jdbcType=TIMESTAMP}, #{arrivalDate,jdbcType=TIMESTAMP},
      #{manufactureDate,jdbcType=TIMESTAMP}, #{recordedDate,jdbcType=TIMESTAMP}, #{isReturn,jdbcType=VARCHAR},
      #{status,jdbcType=VARCHAR}, #{warehouseName,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR},
      #{ownerFactory,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, #{charger,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR})
  </insert>

  <select id="findAll" parameterType="com.example.utils.PageUtils" resultMap="BaseResultMap">
    select
        id,provider_code,provider_name,batch_code,
        material_code,material_name,material_grade,batch_code,status,arrival_date,operator,is_return,account,return_account
    from
        t_initial
    order by
        arrival_date desc
    limit
        #{start},#{pageSize}
  </select>

  <select id="search" parameterType="com.example.utils.SearchUtil" resultMap="BaseResultMap">
    select
    id,provider_code,provider_name,batch_code,
    material_code,material_name,material_grade,batch_code,status,arrival_date,operator,is_return,return_account
    from
    t_initial
    where 1=1
    <if test="providerCode != null and providerCode != ''">
      and  provider_code like concat('%',#{providerCode},'%')
    </if>
    <if test="providerName != null and providerName != ''">
      and provider_name like concat('%',#{providerName},'%')
    </if>

    <if test="materialName != null and materialName != ''">
      and material_name like concat('%',#{materialName},'%')
    </if>

    <if test="materialCode != null and materialCode != ''">
      and material_code like concat('%',#{materialCode},'%')
    </if>

    <if test="materialGrade != null and materialGrade !=''">
      and material_grade like concat('%',#{materialGrade},'%')
    </if>

    <if test="batchCode != null and batchCode!=''">
      and batch_code like concat('%',#{batchCode},'%')
    </if>

    <if test="startDate != null">
      and arrival_date between #{startDate} and #{endDate}
    </if>
    order by arrival_date desc
    limit #{pageStart},#{pageSize}
  </select>

  <select id="searchingAccount" parameterType="com.example.utils.SearchUtil" resultType="integer">
    select count(id) from t_initial where 1=1
  </select>

  <delete id="delete" parameterType="com.example.domain.Initial">
    delete from t_initial where id=#{id}
  </delete>

  <select id="totalAccount" resultType="integer">
    select count(id) from t_initial
  </select>

  <select id="saveByExcel" parameterType="java.util.List">
    insert into t_initial (provider_code,provider_name,batch_code,material_code,material_name,material_grade,status,arrival_date,operator) values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      #{item.providerCode},#{item.providerName},#{item.batchCode},#{item.materialCode},#{item.materialName},
      #{item.materialGrade},#{item.status},#{item.arrivalDate},#{item.operator}
      )
    </foreach>
  </select>

  <update id="returnOrder" parameterType="com.example.domain.Initial">
    update t_initial set return_account = #{returnAccount} where id=#{id}
  </update>

  <select id="findById" resultMap="BaseResultMap" parameterType="integer">
    select
        id,provider_code,provider_name,batch_code,
        material_code,material_name,material_grade,batch_code,status,arrival_date,operator,is_return,account,return_account
    from
        t_initial
    where
        id=#{id}
  </select>

</mapper>